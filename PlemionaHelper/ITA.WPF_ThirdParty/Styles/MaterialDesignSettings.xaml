<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:em="clr-namespace:WPF_ThirdParty.ExtensionMethods"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:System="clr-namespace:System;assembly=mscorlib">

    <System:Double x:Key="ButtonsBaseHeight">50</System:Double>

    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}" x:Key="MaterialDesignRaisedButton">
        <Setter Property="Height" Value="{StaticResource ButtonsBaseHeight}"/>
    </Style>
    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Height" Value="{StaticResource ButtonsBaseHeight}"/>
    </Style>
    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedAccentButton}" x:Key="MaterialDesignRaisedAccentButton">
        <Setter Property="Height" Value="{StaticResource ButtonsBaseHeight}"/>
    </Style>


    <System:Double x:Key="PlusButtonHeight">40</System:Double>
    <System:Double x:Key="PlusButtonWidth">40</System:Double>
    <Thickness x:Key="NoPadding" Top="0" Left="0" Right="0" Bottom ="0"></Thickness>
    <DataTemplate x:Key="PlusButtonContent">
        <materialDesign:PackIcon Kind="Plus">
            <materialDesign:PackIcon.LayoutTransform>
                <ScaleTransform ScaleX="2" ScaleY="2"/>
            </materialDesign:PackIcon.LayoutTransform>
        </materialDesign:PackIcon>
    </DataTemplate>
    <DataTemplate x:Key="ArrowDownButtonContent">
        <materialDesign:PackIcon Kind="ArrowDown">
            <materialDesign:PackIcon.LayoutTransform>
                <ScaleTransform ScaleX="2" ScaleY="2"/>
            </materialDesign:PackIcon.LayoutTransform>
        </materialDesign:PackIcon>
    </DataTemplate>
    <DataTemplate x:Key="ArrowUpButtonContent">
        <materialDesign:PackIcon Kind="ArrowUp">
            <materialDesign:PackIcon.LayoutTransform>
                <ScaleTransform ScaleX="2" ScaleY="2"/>
            </materialDesign:PackIcon.LayoutTransform>
        </materialDesign:PackIcon>
    </DataTemplate>

    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}" x:Key="PlusButton">
        <Setter Property="Height" Value="{StaticResource PlusButtonHeight}"/>
        <Setter Property="Width" Value="{StaticResource PlusButtonWidth}"/>
        <Setter Property="Padding" Value="{StaticResource NoPadding}"/>
        <Setter Property="ContentTemplate" Value="{StaticResource PlusButtonContent}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    
    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}" x:Key="ArrowDownButton">
        <Setter Property="Height" Value="{StaticResource PlusButtonHeight}"/>
        <Setter Property="Width" Value="{StaticResource PlusButtonWidth}"/>
        <Setter Property="Padding" Value="{StaticResource NoPadding}"/>
        <Setter Property="ContentTemplate" Value="{StaticResource ArrowDownButtonContent}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}" x:Key="ArrowUpButton">
        <Setter Property="Height" Value="{StaticResource PlusButtonHeight}"/>
        <Setter Property="Width" Value="{StaticResource PlusButtonWidth}"/>
        <Setter Property="Padding" Value="{StaticResource NoPadding}"/>
        <Setter Property="ContentTemplate" Value="{StaticResource ArrowUpButtonContent}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedLightButton}" x:Key="PlusLightButton">
        <Setter Property="Height" Value="{StaticResource PlusButtonHeight}"/>
        <Setter Property="Width" Value="{StaticResource PlusButtonWidth}"/>
        <Setter Property="Padding" Value="{StaticResource NoPadding}"/>
        <Setter Property="ContentTemplate" Value="{StaticResource PlusButtonContent}"/>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedDarkButton}" x:Key="PlusDarkButton">
        <Setter Property="Height" Value="{StaticResource PlusButtonHeight}"/>
        <Setter Property="Width" Value="{StaticResource PlusButtonWidth}"/>
        <Setter Property="Padding" Value="{StaticResource NoPadding}"/>
        <Setter Property="ContentTemplate" Value="{StaticResource PlusButtonContent}"/>
    </Style>

    <DataTemplate x:Key="RemoveItemButtonContent">
        <materialDesign:PackIcon Kind="Delete">
            <materialDesign:PackIcon.LayoutTransform>
                <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
            </materialDesign:PackIcon.LayoutTransform>
        </materialDesign:PackIcon>
    </DataTemplate>

    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}" x:Key="RemoveItemButton">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ContentTemplate" Value="{StaticResource RemoveItemButtonContent}"/>
    </Style>

    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}" x:Key="{x:Type ComboBox}">
        <Style.Resources>
            <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">15</sys:Double>
        </Style.Resources>
    </Style>

    <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}" x:Key="{x:Type CheckBox}">
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}" x:Key="{x:Type TextBox}">
        <Setter Property="em:SelectAllFocusBehavior.Enable" Value="True"/>
    </Style>

    <Style TargetType="ListViewItem" x:Key="MultipleColumnsListViewItemBaseStyle">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="MinHeight" Value="36"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        Margin="0,-1"
                        BorderBrush="#AAA"
                        BorderThickness="1"
                        CornerRadius="0"
                        Background="{TemplateBinding Background}">
                        <GridViewRowPresenter 
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            Margin="0" 
                            Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="ListView" x:Key="MultipleColumnsListViewBaseStyle" BasedOn="{StaticResource {x:Type ListView}}">
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="GridViewColumnHeader" x:Key="{x:Type GridViewColumnHeader}">
                <Style.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#00000000"/>
                </Style.Resources>
                <!--<Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <TextBlock Text="{TemplateBinding Content}" Padding="5" Width="{TemplateBinding Width}" >
                            </TextBlock>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>-->
                <Setter Property="Height" Value="50"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                <Setter Property="Padding" Value="5" />
                <Setter Property="Foreground" Value="#888"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="Black"/>
                    </Trigger>
                </Style.Triggers>
                <!--<Setter Property="Padding" Value="10"/>-->
            </Style>
        </Style.Resources>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource MultipleColumnsListViewItemBaseStyle}"/>
    </Style>

    <Style TargetType="DataGridRow" x:Key="MultipleColumnsDataGridRowBaseStyle">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="MinHeight" Value="36"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        Margin="0,-1"
                        BorderBrush="#AAA"
                        BorderThickness="1"
                        CornerRadius="0"
                        Background="{TemplateBinding Background}">
                        <GridViewRowPresenter 
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            Margin="0" 
                            Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGrid" x:Key="MultipleColumnsDataGridBaseStyle" BasedOn="{StaticResource {x:Type DataGrid}}">
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="GridViewColumnHeader" x:Key="{x:Type GridViewColumnHeader}">
                <Style.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#00000000"/>
                </Style.Resources>
                <!--<Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <TextBlock Text="{TemplateBinding Content}" Padding="5" Width="{TemplateBinding Width}" >
                            </TextBlock>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>-->
                <Setter Property="Height" Value="50"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                <Setter Property="Padding" Value="5" />
                <Setter Property="Foreground" Value="#888"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="Black"/>
                    </Trigger>
                </Style.Triggers>
                <!--<Setter Property="Padding" Value="10"/>-->
            </Style>
        </Style.Resources>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="RowStyle" Value="{StaticResource MultipleColumnsDataGridRowBaseStyle}"/>
    </Style>

    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" 
               x:Key="myHeaderStyle">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0,8"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
    </Style>

</ResourceDictionary>