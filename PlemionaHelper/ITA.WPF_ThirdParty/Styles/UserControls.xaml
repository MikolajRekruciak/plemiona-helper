<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>
            <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="TextBlock" x:Key="SmallTextBlock">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource ContrastColorNormal}"/>
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource SmallTextBlock}" x:Key="HeaderTextBlock">
        <Setter Property="Foreground" Value="{StaticResource ContrastColorBright}"/>
        <Setter Property="FontSize" Value="32"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <Style x:Key="lineStyle" TargetType="Line">
        <Setter Property="Stroke" Value="Gray" />
        <Setter Property="Stretch" Value="Fill" />
    </Style>

    <Style x:Key="HorizontalLineStyle" TargetType="Line" BasedOn="{StaticResource lineStyle}">
        <Setter Property="X2" Value="1" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Grid.ColumnSpan" 
                    Value="{Binding   
                                Path=ColumnDefinitions.Count,  
                                RelativeSource={RelativeSource AncestorType=Grid}}"/>
    </Style>

    <Style TargetType="Button" x:Key="PanelButton">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Background" Value="{StaticResource MainColorVeryBright}"/>
        <Setter Property="Foreground" Value="{StaticResource ContrastColorNormal}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border 
                            Background="{TemplateBinding Background}" 
                            VerticalAlignment="Stretch" 
                            HorizontalAlignment="Stretch" 
                            BorderThickness="1" 
                            BorderBrush="{StaticResource AddionalColorNormal}"/>
                        <TextBlock 
                            Padding="10" 
                            Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource MainColorBright}"/>
                <Setter Property="Background" Value="{StaticResource ContrastColorBright}"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
            </Trigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False">
                <Setter Property="Background" Value="{StaticResource ContrastColorVeryDark}"/>
                <Setter Property="Foreground" Value="{StaticResource MainColorVeryBright}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Grid" x:Key="ButtonsPanelGrid">
        <Style.Resources>
            <Style TargetType="Button" BasedOn="{StaticResource PanelButton}"/>
        </Style.Resources>

        <Style.Setters>
            <Setter Property="Background" Value="{StaticResource AddionalColorNormal}"/>
        </Style.Setters>

    </Style>

    <Style x:Key="SimpleGroupBox" TargetType="{x:Type GroupBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Border 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Grid.ColumnSpan="4" 
                                Grid.Row="1" 
                                Grid.RowSpan="3">
                            <Border.OpacityMask>
                                <MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
                                    <Binding ElementName="HeaderBorder" Path="ActualWidth"/>
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </Border.OpacityMask>
                        </Border>
                        <Border 
                            Name="HeaderBorder"
                            Grid.Column="1" 
                            Grid.Row="0" 
                            Grid.RowSpan="2" 
                            Padding="3,1,3,2" 
                            KeyboardNavigation.TabNavigation="None"
                            >
                            <ContentControl>
                                <ContentControl.Content>
                                    <TextBlock Text="{TemplateBinding Header}"/>
                                </ContentControl.Content>
                            </ContentControl>
                        </Border>
                        <ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="AmountButtonStyle">
        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Background" Value="{StaticResource MainColorVeryBright}"/>
        <Setter Property="Foreground" Value="{StaticResource ContrastColorNormal}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border 
                            Background="{TemplateBinding Background}" 
                            VerticalAlignment="Stretch" 
                            HorizontalAlignment="Stretch" 
                            BorderThickness="1" 
                            BorderBrush="{StaticResource AddionalColorNormal}"/>
                        <TextBlock 
                                Padding="5,0"
                            Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource MainColorBright}"/>
                <Setter Property="Background" Value="{StaticResource ContrastColorBright}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="UwagiButtonStyle">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background" Value="{StaticResource MainColorVeryBright}"/>
        <Setter Property="Foreground" Value="{StaticResource ContrastColorNormal}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border 
                            Background="{TemplateBinding Background}" 
                            VerticalAlignment="Stretch" 
                            HorizontalAlignment="Stretch" 
                            BorderThickness="1" 
                            BorderBrush="{StaticResource AddionalColorNormal}"/>
                        <TextBlock 
                                Padding="5,0"
                            Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content, StringFormat='Uwagi: {0}'}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                TextWrapping="Wrap"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource MainColorBright}"/>
                <Setter Property="Background" Value="{StaticResource ContrastColorBright}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource UwagiButtonStyle}" x:Key="UwagiButtonStyleOnList">
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Wystepuje}" Value="False">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <!--<DataTrigger Binding="{Binding Opis}" Value="">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="26"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Opis}" Value="{x:Null}">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="26"/>
            </DataTrigger>-->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False">
                <Setter Property="Background" Value="{StaticResource ContrastColorVeryDark}"/>
                <Setter Property="Foreground" Value="{StaticResource MainColorVeryBright}"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MainColorVeryBright}"/>
                <Setter Property="Foreground" Value="{StaticResource ContrastColorNormal}"/>
                <Setter Property="FontWeight" Value="Normal"/>
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.ZakonczonoPraceNatymEtapie}" Value="True">
                <Setter Property="IsHitTestVisible" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--TODO wrzucić wszystkie style odpowiadające za wygląd komórek do jednego sheetu-->
    <Style TargetType="TextBlock" x:Key="GridViewColumnTextBlockBaseStyle">
        <Setter Property="Foreground" Value="{StaticResource BlackColorVeryDark}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>

    <Style TargetType="{x:Type ListViewItem}" x:Key="BaseListViewItemStyle">
        <Setter Property="Background" Value="{StaticResource ContrastColorDark}" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                                    BorderBrush="Transparent"
                                    BorderThickness="1"
                                    Background="{TemplateBinding Background}"
                                    Height="35">
                        <GridViewRowPresenter 
                                        HorizontalAlignment="Stretch" 
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                        Width="Auto" 
                                        Margin="0" 
                                        Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True">
                <Setter Property="Background" Value="{StaticResource AddionalColorVeryDark}"/>
            </DataTrigger>-->
            <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True">
                <Setter Property="Background" Value="{StaticResource AddionalColorVeryDark}"/>
            </DataTrigger>-->
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ListViewItem}" x:Key="ListViewItemMultipleSelectionStyle" BasedOn="{StaticResource BaseListViewItemStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True">
                <Setter Property="Background" Value="{StaticResource AddionalColorVeryDark}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ListView" x:Key="BaseListStyle">

        <Style.Resources>
            <!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />-->
            <Style TargetType="GridViewColumnHeader">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <!--<Border BorderBrush="Black" BorderThickness="2,0,0,0">-->
                            <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5" Width="{TemplateBinding Width}" TextAlignment="Center"/>
                            <!--</Border>-->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="{StaticResource AddionalColorNormal}"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="FontSize" Value="11"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
            </Style>

            <Style TargetType="TextBlock" BasedOn="{StaticResource GridViewColumnTextBlockBaseStyle}"/>
        </Style.Resources>

        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource ContrastColorBright}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource BaseListViewItemStyle}"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectionMode}" Value="Multiple">
                <Setter Property="ItemContainerStyle" Value="{StaticResource ListViewItemMultipleSelectionStyle}"/>
            </DataTrigger>
        </Style.Triggers>

    </Style>


    <Style TargetType="ListBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>


    <Style TargetType="TextBlock" x:Key="SubheaderTextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource ContrastColorNormal}"/>
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource SubheaderTextBlock}" x:Key="FiltrTextBlock">
        <Setter Property="Text" Value="Filtr: "/>
    </Style>

    <Style TargetType="TextBox" x:Key="SubheaderTextBox">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource ContrastColorNormal}"/>
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource SubheaderTextBox}" x:Key="FiltrTextBox">
        <Setter Property="Foreground" Value="#42f4a1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,5,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource PanelButton}" x:Key="FiltrButton">
        <Setter Property="Width" Value="140"/>
    </Style>

    <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
    <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>

</ResourceDictionary>